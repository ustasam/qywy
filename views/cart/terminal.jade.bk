
include ../head

body

	script(type='text/javascript', src="/jquery-tmpl/jquery.tmpl.min.js")
	script(type='text/javascript', src="/jqueryui/ui/minified/jquery.ui.core.min.js")	
	script(type='text/javascript', src="/jqueryui/ui/minified/jquery.ui.widget.min.js")
	script(type='text/javascript', src="/jqueryui/ui/minified/jquery.ui.button.min.js")
	
	script(type='text/javascript', src="/js/jquery-textFill-0.1.js")
	
	script(type='text/javascript', src="/jPlayer/jquery.jplayer.min.js")

	link(rel="stylesheet", type="text/css", href="/css/terminal.css")
	//------------------------------------------------------------------------------------------------------
	script(type='text/javascript')

		function checkEAN13(code){  
			//3 страна, 4 изготовитель, 5 товар, 1 контроль
			code = ''+code;
			var cs = 0;
			for(var i=0; i<12; i++)
			{  
				var digit = Number(code.charAt(i));
				cs = cs + digit * ( ((i % 2) == 0) ? 1 : 3);
			}
			cs = cs % 10;
			if (cs > 0) cs = 10 - cs
			return (cs == Number(code.charAt(13 - 1))) && code.length == 13;
		}
	
		var scan = { code: "", times: [] }
		function scancode(event){
			var enableKeyCode = false; //config var
			
			var n = String.fromCharCode(event.charCode);
			if (n < "0" || n > "9") {scan.code = ""; scan.times = []; return;}
			var timeStamp = event.timeStamp;
			while ((scan.times.length > 0) && (timeStamp - scan.times[0] > 1500))//1.5sec
			{
				scan.times = scan.times.slice(1);
				scan.code = scan.code.substring(1);
			}
			scan.code = scan.code + "" + n;
			scan.times.push(timeStamp);
			while (scan.times.length >= 13 + (enableKeyCode ? 1 : 0)){ //> to keyCode scanning
				var current = scan.code.substring(0, 13);
				if (!enableKeyCode && checkEAN13(current))
				{
					player.play("scanned");
					scanned(current);//Scanned
					scan.times = scan.times.slice(13);
					scan.code = scan.code.substring(13);
				}
				scan.times = scan.times.slice(1);
				scan.code = scan.code.substring(1);
			}
		}
		
		function scankey(event){
			if ($.inArray(event.keyCode, [02, 03, 13, 10, 09, 32]) > -1) //STX, ETX, CR, NL, HT, Space
			{
				if (scan.code.length >= 13)
				{
					var current = scan.code.substring(scan.code.length - 13);// (0, 13)
					console.log("cur" + current);
					if (checkEAN13(current))
					{
						player.play("scanned");
						scanned(current);//Scanned
					}else{
						player.play("error");
					}
				}
				scan.code = ""; scan.times = [];
			}
		}
		
		function scanned(code){
			console.log("Scanned:" + code);
		}
	
		function renderTemplate(container, template, data) {
			$(container).empty();
			$(template).tmpl(data).appendTo(container);
		}
		
		function renderItems(){
			renderTemplate( "#categories", "#itemTemplate", categories );
			renderTemplate( "#products", "#itemTemplate", categories );
			$( "button.item" ).button({
				create: function(event, ui) {
					event.target.innerHTML += '<img id="button" src="' 
						+ $(event.target).attr("image") + '"></img>';
				}
			});
			$( "button.item" ).click(itemClick);
		}
		
		function itemClick(){
			var item = $("#" + this.id).tmplItem().data;
			//if (item.price != undefined){
				order.add($("#" + this.id).tmplItem().data);
			//}else{
				renderItems(item);
			//}
		}
		
		function resize(){
			$("#products-frame").width(200);
			
			var margins = $("#categories-frame").outerHeight(true) - $("#categories-frame").height();
			var height = $(window).height() - margins;
			$("#categories-frame").height(height);	
			$("#products-frame").height(height);
			$("#total").height($(window).height() - ($("#total-frame").height() - $("#total").height() + margins));

			var marginsh = $("#categories-frame").outerWidth(true) - $("#categories-frame").width();
			$("#products-frame").width( $(window).width()
				- $("#categories-frame").outerWidth(true) - $("#total").outerWidth(true) - marginsh * 2 - 0);
		}
		
		$(document).ready(function(){
			$.getJSON('/api/products', function(data) {
				categories = data;
				renderItems();
			});		
			
			$( "#calc button, #okcancel button" ).button();
			$( "#calc button, #okcancel button" ).click(calcClick);

			$(window).keypress(scancode);
			$(window).keydown(scankey);

			order.render();		
			
			$(window).resize(resize);
			resize();

			player.init();
		});

		function Order()
		{
			this.items = [];	
			this.sum = 0;
			this.paid = 0;
		}
		Order.prototype.change = function() { return this.paid - this.sum; }
		Order.prototype.add = function(item)
		{			item.price = 10;////
			var pos = -1;
			for (var i = 0;i < this.items.length; i++) {if ( this.items[i].item == item ) { pos = i; break; }};
			if ( pos == -1 ){
				this.items.push( {"item": item, "amount": 1, "sum": item.price} );
				this.sum = this.sum + item.price;
			}else{
				this.items[pos].amount = this.items[pos].amount + 1;
				this.items[pos].sum = this.items[pos].sum + this.items[pos].item.price;
				this.sum = this.sum + this.items[pos].item.price;
			}
			this.render();
		}
		Order.prototype.render = function ()
		{
			$("#summ .val").text(Number(this.sum).toFixed(2));			
			$("#paid .val").text(Number(this.paid).toFixed(2));
			$("#change .val").text(Number(this.change()).toFixed(2));
		
			$.each($(".val"), function(i, v){$(v).text( Number($(v).text()).toFixed(2) )});

			if (this.change() == 0) $("#change .val").text("");
			else if (this.change() < 0) $("#change .val").css("color", "Salmon");
			else $("#change .val").css("color", $("#paid .val").css("color"));
			
			$(".dyn").textfill();		
			
			renderTemplate( "#total tbody", "#orderTemplate", this.items );
		}

		var categories = [];
		var orders = [];		
		var order = new Order();
		
		var comma = 1;
		function calcClick(){	
			//now.aaa();
			if (this.id >= 0 && this.id <= 9) {
				if (comma == 1)
				{
					if (this.id == "00"){
						order.paid += "00";
					}else{
						order.paid += "" + this.id*comma;
					}
				}else{
					if (comma >= 0.01) order.paid = Number(order.paid) + Number(this.id * comma);
					comma = comma * 0.1;
				}
			}
			if (this.id == "," || this.id == "."){
				order.paid = Number(order.paid) - Number(order.paid) % 1;
				comma = 0.1;
			}
			if (this.id.toLowerCase() == "c") {order.paid = 0; comma = 1;}
			if (this.id.toLowerCase() == "cancel"){
				order = new Order();
				comma = 1;
			}
			if (this.id.toLowerCase() == "ok"){
				orders.push[order];
				order = new Order();
				comma = 1;
			}
			player.play("click");
			order.render();
		}
		
		var player = new function() {
			this.initTrack = function(name, track){
				player[name] = { players:[], current:0, path:""};
				for(var i = 0; i<6; i++)
				{var a= i;
					$("#common").append('<div id="jplayer' + i + name + '"/>');
					$("#jplayer" + i + name).jPlayer({ 
						ready: function () {
							$(this).jPlayer('setMedia', { mp3: '/audio/' + track});
						},
						swfPath:"/jPlayer/Jplayer.swf"
					});
					player[name].players.push($("#jplayer" + i + name));
					player[name].path = '/audio/' + track;
				}
			};
			this.init = function()
			{
				this.initTrack("click", "pocketKnife2.mp3");			
				this.initTrack("error", "Windows Critical Stop.mp3");
				this.initTrack("scanned", "Speech On.mp3");
			};
			this.play = function(name)
			{
				var p = player[name].players[player[name].current];
				p.jPlayer('setMedia', { mp3: "/audio/Speech On.mp3"});
				p.jPlayer('play');
				player[name].current = player[name].current >= 5 ? 0 : player[name].current + 1;
			}
		}

	#jplayer	
	//-----------------------------------------------------------------------------------------------------
	
	script(id="itemTemplate", type="text/x-jquery-tmpl")
		button(class="item", id="id{{= id}}", image="{{= image}}") {{= name}}
	
	script(id="orderTemplate", type="text/x-jquery-tmpl")
		tr
			td.label {{= item.name}}
			td.price {{= Number(item.price).toFixed(2)}}
			td.amount {{= amount}}
			td.sum {{= Number(sum).toFixed(2)}}
	
	//-----------------------------------------------------------------------------------------------------
	#categories-frame
		#label Категории
		#categories
	
	#products-frame
		#label Продукты
		#products
	#total-frame
		#total
			table#total
				thead
					tr
						th Товар
						th.price Цена
						th#nowrap.amount Кол-во
						th.sum Сумма
				tbody
					tr
						td.label Апельсинка кудрявая и сладкая
						td.price 2333.33
						td.amount 54
						td.sum 1200.23
					tr
						td.label Хлебопекарное изделие
						td.price 2333.33
						td.amount 54
						td.sum 1200.23
		#amount
			table#amount
				tr
					td
						#label Сдача
						#change.dyn
							span.val= "0000.00"		
					td
						#label Сумма
						#summ.dyn
							span.val= "0000.00"
				tr
					td
						#label Внесено
					td
						#paid.dyn
							span.val= "0000.00"
		#calc
			#nowrap
				button(id="7") 7
				button(id="8") 8
				button(id="9") 9
			#nowrap
				button(id="4") 4
				button(id="5") 5
				button(id="6") 6
			#nowrap
				button(id="1") 1
				button(id="2") 2
				button(id="3") 3
			#nowrap
				button(id="0") 0
				button(id="00") 00
				button(id=",") ,
		#okcancel
			button(id="ok") OK
			button(id="C") C
			button(id="cancel") Отмена

	#common